name: Docker CI/CD script

on:
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug

env:
  S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  CODEDEPLOY_NAME: ${{ secrets.AWS_CODEDEPLOY_NAME }}
  CODEDEPLOY_GROUP: ${{ secrets.AWS_CODEDEPLOY_GROUP }}

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Create .env file to use env variable at deploy.sh
      - name: Create .env file
        run: |
          touch .env
          echo PORT=${{ secrets.PORT }} >> .env
          echo RTC_MIN_PORT=${{ secrets.RTC_MIN_PORT }} >> .env
          echo RTC_MAX_PORT=${{ secrets.RTC_MAX_PORT }} >> .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          file: ./dockerfile
          tags: jja08111/camstudy-media-server:latest
          build-args: |
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            PORT=${{ secrets.PORT }}
            RTC_MIN_PORT=${{ secrets.RTC_MIN_PORT }}
            RTC_MAX_PORT=${{ secrets.RTC_MAX_PORT }}
            ROUTING_SERVER_URL=${{ secrets.ROUTING_SERVER_URL }}
            SSL_KEY=${{ secrets.SSL_KEY }}
            SSL_CERT=${{ secrets.SSL_CERT }}
      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload to S3
        run: aws s3 cp --region ${{ env.AWS_REGION }} ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip

      - name: Code Deploy
        run: |
          aws deploy create-deployment --application-name $CODEDEPLOY_NAME \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name $CODEDEPLOY_GROUP \
            --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$GITHUB_SHA.zip
